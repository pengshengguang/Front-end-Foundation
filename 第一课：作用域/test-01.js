// 预解释

// js中的数据类型
// 基本数据类型
// number、string、boolean、null、undefined

// 引用数据类型
// object: {}、[]、/^$/、Date
// function

// 两者的区别
// 基本数据类型是按照值来操作的
// 引用数据类型是按照引用地址来操作的

// 1、预解释（变量提升）
// 在当前的作用域中，JS代码执行之前，浏览器首先会默认的把所有带var和function的进行提前的声明和定义。
// 1) 理解声明和定义
// var num = 12
// 声明（declare）: var num; 告诉浏览器在全局作用域中有一个num的变量（注意，如果一个变量只是声明没有赋值，默认是undefined）
// 定义（defined）: num = 12;  给变量赋值

// 2)、对于var 和 function关键字，在预解释中是有区别的
// var 在预解释中只是提前声明
// function 在预解释的时候提前声明+定义都完成了。

// 3)、预解释只发生在当前作用域下，例如: 开始只对window下进行预解释，只有函数执行的时候才对函数进行预解释

// 2、JS中内存的分类
// 栈内存: 用来提供JS代码执行的环境（作用域：全局作用域、私有作用域）
// 堆内存: 用来存储引用数据类型（对象存储的是属性名和属性值，函数存储的是代码字符串）
