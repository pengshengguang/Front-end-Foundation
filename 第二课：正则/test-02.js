// 元字符：
// 每一个正则表达式都是由元字符和修饰符组成
// [元字符] -> 在//之间具有意义的一些字符
// 1、具有特殊特殊意义的元字符
// \: 转义字符,转移后面字符所代表的含义
// ^: 以某一个元字符开始
// $: 以某一个元字符结尾
// \n: 匹配一个换行符
// .: 除了\n以外的任意字符
// (): 分组-> 把一个大正则划分成几个小正则
// x|y: x或者y中的一个
// [xyz]: x或者y或者z中的一个
// [^xyz]: 除了三个中的任意一个字符
// [a-z]: a-z之间的任何一个字符
// [^a-z]: 除了a-z之间的任何一个字符
// \d: 一个0-9之间的数字，  \D: 除了0-9之间的数字以外的任何字符
// \b: 匹配一个边界符 “w1 w2 w3”
// \w: 数字、字母、下划线中的任意一个字符   等价于 [(0-9)(z-z)(A-Z)(_)]
// \s: 匹配一个空白字符（空格，一个制表符，换页符）

// var reg = /^0.2$/; // -> 以0开头，以2结尾，中间可以是除了\n的任意字符
// console.log(reg.test('002')); // -> true

// var reg = /\d/;
// console.log(reg.test("psg100"));
//
// reg = /^\d$/;
// console.log(reg.test("1023213100"));
//
// reg = /^\d/;
// console.log(reg.test("1喷科技经费的减肥路上就发了多少分"));

// ():分组
// var reg = /^(\d+)lighter\d+$/; // 以一到多个数字为开头
// console.log(reg.test("121212lighter1212121"));
// -----------------------------------------------------

// 2、代表出现次数的量词元字符
// *: 出现零到多次（可以不出现）
// +: 出现一到多次（至少出现一次）
// ?: 出现零次或者一次 (最多出现一次)
// {n}: 出现n次
// {n,}: 出现n到多次
// {n, m}: 出现n到m次

// var reg = /^\d+$/;
// console.log(reg.test('2018'));

// 一个验证手机号的正则： 11位数据，第一位是1
// var reg = /^1\d{10}$/;
// console.log(reg.test('13101010101'));


